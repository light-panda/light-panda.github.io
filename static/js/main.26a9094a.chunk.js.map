{"version":3,"sources":["utils/random.js","components/Icons/icons.js","components/Toolbox/Toolbox.js","components/Todos/TodoItem.js","components/Todos/Todos.js","App.js","serviceWorker.js","index.js"],"names":["randomHash","Math","random","toString","substring","DeleteIcon","onClick","className","xmlns","width","height","viewBox","d","EditIcon","Toolbox","innerProps","onDelete","defaultStyle","transition","opacity","position","top","left","transitionStyles","entering","useHover","useState","hovered","set","onMouseEnter","onMouseLeave","TodoItem","React","forwardRef","ref","todo","itemsBeingDeleted","deleteItem","innerRef","hoverProps","isHovered","hoverToolboxProps","isToolboxHovered","extended","setExtended","Transition","in","find","item","id","timeout","onEntered","deletingState","CSSTransition","enter","exit","classNames","onExited","style","text","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","Todos","useLocalStorage","items","setItems","value","setValue","useEffect","filter","deleting","type","placeholder","onChange","e","target","onKeyDown","key","length","done","onDragEnd","destination","source","index","droppableId","provided","droppableProps","component","appear","map","draggableId","draggableProps","dragHandleProps","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26a9094a.chunk.js","sourcesContent":["export const randomHash = () => Math.random().toString(36).substring(7)\n","import React from \"react\";\nimport './icons.css'\n\nexport function DeleteIcon({onClick, className}) {\n    return (\n        <svg onClick={onClick} className={`icon ${className}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <title>Delete</title>\n            <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"/>\n        </svg>\n    )\n}\n\nexport function EditIcon({className}) {\n    return (\n        <svg className={`icon ${className}`} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <title>Edit</title>\n            <path\n                d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n        </svg>\n    )\n}\n","import React from 'react'\nimport {DeleteIcon, EditIcon} from \"../Icons/icons\";\n\nfunction Toolbox({className, innerProps, onDelete}) {\n    return (\n        <div className={className} {...innerProps}>\n            <EditIcon className={'list__item__toolbox__edit'}/>\n            <DeleteIcon onClick={onDelete} className={'list__item__toolbox__delete'}/>\n        </div>\n    )\n}\n\nexport default Toolbox\n","import {CSSTransition, Transition} from \"react-transition-group\";\nimport React, {useState} from \"react\";\nimport Toolbox from \"../Toolbox/Toolbox\";\n\nconst duration = 400\n\nconst defaultStyle = {\n    transition: `top ${duration}ms ease-in-out, left ${duration}ms ease-in-out, opacity ${duration}ms ease-in-out`,\n    opacity: 1,\n    position: 'relative',\n    top: '0px',\n    left: '0px'\n}\n\nconst transitionStyles = {\n    entering: {opacity: 0, top: '-20px', left: '0px'},\n};\n\nfunction useHover() {\n    const [hovered, set] = useState(false);\n    const binder = {\n        onMouseEnter: () => set(true),\n        onMouseLeave: () => set(false)\n    };\n    return [binder, hovered];\n}\n\n\nconst  TodoItem = React.forwardRef(({todo, itemsBeingDeleted, deleteItem, innerRef, innerProps}, ref) => {\n    const [hoverProps, isHovered] = useHover()\n    const [hoverToolboxProps, isToolboxHovered] = useHover()\n    const [extended, setExtended] = useState(false)\n\n    return (\n        <Transition in={!!itemsBeingDeleted.find(item => item.id === todo.id)}\n                    timeout={duration} onEntered={() => deleteItem({id: todo.id})}>\n            {deletingState => (\n                <div className={'list__item'} ref={ref || innerRef} {...innerProps}>\n                    <CSSTransition in={isHovered || (isToolboxHovered && extended)} timeout={{enter: 0, exit: 500}}\n                                   classNames={'list__item__toolbox'}\n                                   onEntered={() => setExtended(true)}\n                                   onExited={() => setExtended(false)}>\n                        {() => (\n                            <>\n                                <Toolbox className={'list__item__toolbox'} innerProps={hoverToolboxProps} onDelete={deleteItem}/>\n                                <li {...hoverProps} className={'list__item__content'}\n                                    style={{...defaultStyle, ...transitionStyles[deletingState]}}>\n                                    {todo.text}\n                                </li>\n                            </>\n                        )}\n                    </CSSTransition>\n                </div>\n            )}\n        </Transition>\n    )\n})\n\nexport default TodoItem\n","import React, {useEffect, useState} from 'react'\nimport './Todos.css'\nimport {randomHash} from \"../../utils/random\";\nimport {useLocalStorage} from \"use-hooks\";\nimport TodoItem from \"./TodoItem\";\nimport QueueAnim from 'rc-queue-anim';\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nfunction Todos() {\n  const [items, setItems] = useLocalStorage('todos', [])\n  const [itemsBeingDeleted, setItemsBeingDeleted] = useState([])\n\n  const [value, setValue] = useState('')\n\n  // removing eventual corrupted state elements\n  useEffect(() => setItems(items.filter(item => item.deleting !== true)), [])\n\n  const handleKeyDown = ({key}) => {\n    if (key === 'Enter' && value.length > 0) {\n      // add new item\n      setItems([{id: randomHash(), text: value, done: false, deleting: false}, ...items])\n      // empty text input\n      setValue('')\n    }\n  }\n\n  const deleteItem = ({id}) => {\n    setItems([\n      ...items.filter(item => item.id !== id)\n    ])\n  }\n\n  const beginDelete = ({id}) => {\n    setItemsBeingDeleted([\n      ...itemsBeingDeleted,\n      {id}\n    ])\n  }\n\n  const onDragEnd = (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    setItems(reorder(\n      items,\n      result.source.index,\n      result.destination.index\n    ));\n  }\n\n  return (\n    <div className={'container'}>\n      <input type=\"text\" id=\"input\" className=\"input-text\" placeholder=\"Write an idea ...\"\n             value={value} onChange={(e) => setValue(e.target.value)} onKeyDown={handleKeyDown}/>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId={'droppable'}>\n          {(provided) => (\n            <div  {...provided.droppableProps} ref={provided.innerRef} className={'list-droppable'}>\n              <QueueAnim component={'ul'} className={'list'} type={['top', 'top']}\n                         appear={false}>\n                {items.map((todo, index) => (\n                  <Draggable key={todo.id} draggableId={todo.id} index={index}>\n                    {(provided) => (\n                      <TodoItem todo={todo} itemsBeingDeleted={itemsBeingDeleted}\n                                deleteItem={() => deleteItem({id: todo.id})}\n                                innerRef={provided.innerRef}\n                                innerProps={{\n                                  ...provided.draggableProps,\n                                  ...provided.dragHandleProps\n                                }}\n                                style={provided.draggableProps.style}/>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </QueueAnim>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default Todos\n","import React from 'react';\nimport './App.css';\nimport Todos from \"./components/Todos/Todos\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todos/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}